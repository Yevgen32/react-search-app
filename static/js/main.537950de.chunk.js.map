{"version":3,"sources":["repositories/repositories.conts.ts","search/search-history.const.ts","ui/ui.const.ts","reducers/index.ts","ui/ui.reducers.ts","repositories/repositories.reducers.ts","search/search-history.reducers.ts","store/store.ts","navigation/assets/logo.png","navigation/navigation.tsx","repositories/repositories.selectors.ts","ui/ui.selectors.ts","search/search-history.tsx","error/error.types.ts","api/api.ts","ui/ui.action.ts","search/search-input.tsx","repositories/repositories.actions.ts","search/search-history.action.ts","search/search-items.tsx","loader/loader-screen.tsx","search/search-screen.tsx","app/App.tsx","index.tsx"],"names":["GET_REPOSITORIES","SET_SEARCH_HISTORY","LOADING","SET_MESSAGE","rootReducer","combineReducers","ui","state","action","type","isLoading","payload","message","repositories","searchHistory","loggerMiddleware","createLogger","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","Navigation","className","href","src","Logo","alt","to","repositoriesSelector","isProgressSelectors","messageSelectors","SearchHistory","localStorageHistory","localStorage","getItem","JSON","parse","length","map","historyItem","i","ValidationError","name","stack","error","this","stacktrace","Error","ApiError","api","url","options","headers","a","request","fetch","Object","assign","Accept","mode","body","method","stringify","result","response","ok","json","code","status","data","console","log","group","info","setLoading","load","setMessage","SearchInput","useState","searchValue","setSearchValue","dispatch","useDispatch","onChange","e","target","value","placeholder","onKeyPress","search","charCode","total_count","items","searchWorld","searchHistoryItem","searchHistoryList","Set","concat","slice","setItem","setSearchHistory","SearchItem","props","description","id","language","LoaderScreen","Search","useSelector","isProgress","repositorie","full_name","App","exact","path","isAc","component","SearchScreen","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.537950de.chunk.js","sourcesContent":["export const GET_REPOSITORIES = 'GET_REPOSITORIES';","export const SET_SEARCH_HISTORY = 'SET_SEARCH_HISTORY';\r\nexport const GET_SEARCH_HISTORY = 'GET_SEARCH_HISTORY';\r\nexport const MAX_ELEMENT_HISTORY = 5;","export const LOADING = 'LOADING';\r\nexport const SET_MESSAGE = 'SET_MESSAGE';\r\n","import { combineReducers } from 'redux';\r\n\r\nimport { repositories } from '../repositories/repositories.reducers';\r\nimport { searchHistory } from '../search/search-history.reducers';\r\nimport { ui } from '../ui/ui.reducers';\r\n\r\nconst rootReducer = combineReducers({\r\n    ui,\r\n    repositories,\r\n    searchHistory,\r\n});\r\n\r\nexport default rootReducer;","import { LOADING, SET_MESSAGE } from './ui.const'\r\n\r\n\r\nexport const ui = (\r\n    state = [],\r\n    action: {\r\n        type: string;\r\n        payload: unknown;\r\n    },\r\n) => {\r\n    switch (action.type) {\r\n        case LOADING:\r\n            return ({ ...state, isLoading: action.payload });\r\n        case SET_MESSAGE:\r\n            return ({ ...state, message: action.payload })\r\n        default:\r\n            return state;\r\n    }\r\n};","import { GET_REPOSITORIES } from './repositories.conts';\r\n\r\nexport const repositories = (\r\n    state = {},\r\n    action: {\r\n        type: string;\r\n        payload: unknown\r\n    },\r\n) => {\r\n    switch (action.type) {\r\n        case GET_REPOSITORIES:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};","import { SET_SEARCH_HISTORY } from './search-history.const'\r\n\r\nexport const searchHistory = (\r\n    state = [],\r\n    action: {\r\n        type: string;\r\n        payload: unknown\r\n    },\r\n) => {\r\n    switch (action.type) {\r\n        case SET_SEARCH_HISTORY:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};","import { createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { createLogger } from 'redux-logger';\r\nimport rootReducer from '../reducers';\r\n\r\nconst loggerMiddleware = createLogger();\r\n\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeWithDevTools(applyMiddleware(thunkMiddleware, loggerMiddleware)),\r\n)","export default __webpack_public_path__ + \"static/media/logo.7ddb38a3.png\";","import React from 'react';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport Logo from './assets/logo.png';\r\n\r\nimport './navigation.css';\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <div className=\"menu\">\r\n      <div className=\"logo\">\r\n        <a href=\"https://requestum.com/\">\r\n          <img src={Logo} alt=\"requestum\" />\r\n        </a>\r\n      </div>\r\n      <div className=\"other-links\">\r\n        <NavLink className=\"menu-link\" to=\"/git\">\r\n          Github\r\n        </NavLink>\r\n        <NavLink className=\"menu-link\" to=\"/users\">\r\n          users\r\n        </NavLink>\r\n        <NavLink className=\"menu-link\" to=\"/\">\r\n          search\r\n        </NavLink>\r\n        <NavLink className=\"menu-link\" to=\"/app\">\r\n          app\r\n        </NavLink>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","\r\nimport type { ReduxState } from \"../store/state.types\"\r\n\r\nexport const repositoriesSelector = (state: ReduxState): Array<{ description: string; full_name: string; id: string; language: string }> => state.repositories;\r\n","import type { ReduxState } from \"../store/state.types\"\r\n\r\nexport const isProgressSelectors = (state: ReduxState) => state.ui.isLoading;\r\nexport const messageSelectors = (state: ReduxState) => state.ui.message;","import React from 'react';\r\n\r\nimport './search.css';\r\n\r\nconst SearchHistory = () => {\r\n  const localStorageHistory = localStorage?.getItem('searchHistoryList');\r\n  const searchHistory = localStorageHistory ? JSON.parse(localStorageHistory) : [];\r\n\r\n  return (\r\n    <div className=\"search-history-wrapper\">\r\n      <p>Search history:</p>\r\n      {searchHistory?.length\r\n        ? searchHistory.map((historyItem: string, i: number) => (\r\n            <div key={historyItem + i} className=\"search-history-item\">\r\n              {historyItem}\r\n            </div>\r\n          ))\r\n        : 'Don`t have search result...'}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchHistory;\r\n","type Payload = {\r\n  code?: number;\r\n  data?: unknown;\r\n  stack?: string;\r\n};\r\n\r\ntype InputPayload = {\r\n  field?: string;\r\n};\r\n\r\nexport class ValidationError extends Error {\r\n  payload: Payload;\r\n\r\n  constructor(message: string, payload: Payload = {}) {\r\n    super(message);\r\n    this.name = 'ValidationError';\r\n    this.message = message;\r\n    this.payload = payload;\r\n    if (payload.stack) {\r\n      this.stack = payload.stack;\r\n    }\r\n  }\r\n\r\n  toJSON(): Record<string, unknown> {\r\n    return {\r\n      error: {\r\n        name: this.name,\r\n        message: this.message,\r\n        stacktrace: this.stack,\r\n        payload: this.payload,\r\n      },\r\n    };\r\n  }\r\n}\r\n\r\nexport class PermissionError extends Error {\r\n  payload: Payload;\r\n\r\n  constructor(message: string, payload: Payload = {}) {\r\n    super(message);\r\n    this.name = 'PermissionError';\r\n    this.message = message;\r\n    this.payload = payload;\r\n    if (payload.stack) {\r\n      this.stack = payload.stack;\r\n    }\r\n  }\r\n\r\n  toJSON(): Record<string, unknown> {\r\n    return {\r\n      error: {\r\n        name: this.name,\r\n        message: this.message,\r\n        stacktrace: this.stack,\r\n        payload: this.payload,\r\n      },\r\n    };\r\n  }\r\n}\r\n\r\nexport class ApiError extends Error {\r\n  payload: Payload;\r\n\r\n  constructor(message: string, payload: Payload = {}) {\r\n    super(message);\r\n    this.name = 'ApiError';\r\n    this.message = message;\r\n    this.payload = payload;\r\n    if (payload.stack) {\r\n      this.stack = payload.stack;\r\n    }\r\n  }\r\n\r\n  toJSON(): Record<string, unknown> {\r\n    return {\r\n      error: {\r\n        name: this.name,\r\n        message: this.message,\r\n        stacktrace: this.stack,\r\n        payload: this.payload,\r\n      },\r\n    };\r\n  }\r\n}\r\n\r\nexport class PropertyError extends Error {\r\n  payload: InputPayload;\r\n\r\n  constructor(message: string, payload: InputPayload = {}) {\r\n    super(message);\r\n    this.name = 'PropertyError';\r\n    this.message = message;\r\n    this.payload = payload;\r\n  }\r\n\r\n  toJSON(): Record<string, unknown> {\r\n    return {\r\n      error: {\r\n        name: this.name,\r\n        message: this.message,\r\n        stacktrace: this.stack,\r\n        payload: this.payload,\r\n      },\r\n    };\r\n  }\r\n}\r\n\r\nexport class FatalError extends Error {\r\n  payload: Payload;\r\n\r\n  constructor(message: string, payload: Payload = {}) {\r\n    super(`Fatal error: ${message}`);\r\n    this.name = 'FatalError';\r\n    this.message = message;\r\n    this.payload = payload;\r\n    if (payload.stack) {\r\n      this.stack = payload.stack;\r\n    }\r\n  }\r\n\r\n  toJSON(): Record<string, unknown> {\r\n    return {\r\n      error: {\r\n        name: this.name,\r\n        message: this.message,\r\n        stacktrace: this.stack,\r\n        payload: this.payload,\r\n      },\r\n    };\r\n  }\r\n}\r\n\r\nexport type Errors = Error | PermissionError | ApiError | ValidationError | FatalError | null;\r\n","import fetch from 'isomorphic-unfetch';\r\n\r\nimport type http from 'http';\r\nimport { ApiError, ValidationError, PermissionError } from '../error/error.types';\r\n\r\n\r\nimport type { Response, Options } from './api.types';\r\n\r\nexport function isValid<T>(url: string, response: Response<T>): Response<T> | never {\r\n    if (response.code === 401) {\r\n        throw new PermissionError(`Access denied [${response.code}] to ${url}`);\r\n    }\r\n\r\n    if (response.status !== 'ok') {\r\n        throw new ValidationError(`${response.code} ${response.data}`, {\r\n            code: response.code,\r\n            data: response.data,\r\n        });\r\n    }\r\n    return response;\r\n}\r\n\r\nexport default async function api<T>(\r\n    url: string,\r\n    options?: Options,\r\n    headers?: http.OutgoingHttpHeaders,\r\n) {\r\n    const mode: RequestMode = 'cors';\r\n    try {\r\n        const request = fetch(\r\n            `${url}`,\r\n            Object.assign(\r\n                {},\r\n                {\r\n                    headers: {\r\n                        Accept: 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                        ...headers,\r\n                    },\r\n                    mode,\r\n                },\r\n                options,\r\n                options?.body && options?.method !== 'GET' ? { body: JSON.stringify(options.body) } : {},\r\n            ),\r\n        );\r\n        const result = await request;\r\n\r\n        let response: Response<T> = null!;\r\n\r\n        if (result.ok) {\r\n            response = await result.json();\r\n        } else {\r\n            throw new ValidationError('Json parsing error', {\r\n                code: result.status,\r\n                data: {\r\n                    url,\r\n                    method: options?.method,\r\n                },\r\n            });\r\n        }\r\n\r\n        console.log(\"response\", response)\r\n        console.group(`API Request Debug ${url}`);\r\n        console.info(`Url ${url}`);\r\n        console.info('Response', response);\r\n\r\n        return response;\r\n    } catch (e) {\r\n        if (e instanceof ValidationError) {\r\n            throw e;\r\n        }\r\n\r\n        throw new ApiError(e.message, {\r\n            code: 500,\r\n            stack: e.stack,\r\n        });\r\n    }\r\n}\r\n\r\nexport const pause = (duration: number): Promise<void> =>\r\n    new Promise(res => setTimeout(res, duration));\r\n\r\n\r\nexport async function retry<T>(\r\n    retries: number,\r\n    fn: () => Promise<T>,\r\n    delay = 500,\r\n    delayMultiply = 1,\r\n): Promise<T> {\r\n    try {\r\n        return await fn();\r\n    } catch (e) {\r\n        if (retries > 1) {\r\n            await pause(delay);\r\n            return retry(retries - 1, fn, delay * delayMultiply);\r\n        }\r\n        throw e;\r\n    }\r\n}\r\n","import { LOADING, SET_MESSAGE } from './ui.const'\r\n\r\nexport const setLoading = (load: boolean) => ({\r\n    type: LOADING,\r\n    payload: load\r\n})\r\n\r\nexport const setMessage = (message: string) => {\r\n    return ({\r\n        type: SET_MESSAGE,\r\n        payload: message\r\n    })\r\n}\r\n\r\n","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { SearchInput as SearchInputComponent } from 'evergreen-ui';\r\n\r\n// actions\r\nimport { setSearchHistory } from './search-history.action';\r\nimport { getItem } from '../repositories/repositories.actions';\r\n\r\nimport './search.css';\r\n\r\nconst SearchInput = () => {\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <SearchInputComponent\r\n      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setSearchValue(e.target.value);\r\n      }}\r\n      value={searchValue}\r\n      className=\"search-input\"\r\n      name=\"search-input\"\r\n      placeholder=\"for search please enter ...\"\r\n      onKeyPress={(e: React.KeyboardEvent) => {\r\n        if (e.charCode === 13) {\r\n          if (searchValue.length) {\r\n            dispatch(getItem(searchValue));\r\n            dispatch(setSearchHistory(searchValue));\r\n          }\r\n        }\r\n\r\n        return;\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchInput;\r\n","import api from '../api/api';\r\n\r\nimport { GET_REPOSITORIES } from './repositories.conts';\r\n\r\nimport { setLoading, setMessage } from '../ui/ui.action'\r\n\r\nexport const getItem = (search: string) => {\r\n    return async (dispatch: (payload: unknown) => unknown) => {\r\n        try {\r\n            dispatch(setLoading(true))\r\n            // TODO CREATE RIGHT TYPES FOR API. DONT HAVE status: 'ok' | 'error';code: number; data: T;\r\n            const result = await api(`https://api.github.com/search/repositories?q={${search}}`)\r\n            // @ts-ignore\r\n            if (result.total_count) {\r\n                dispatch(({\r\n                    type: GET_REPOSITORIES,\r\n                    // @ts-ignore\r\n                    payload: result.items\r\n                }));\r\n\r\n            } else {\r\n                dispatch(({\r\n                    type: GET_REPOSITORIES,\r\n                    // @ts-ignore\r\n                    payload: result.items\r\n                }));\r\n\r\n                dispatch(setMessage('nothing found for your request :crying_cat_face:'))\r\n            }\r\n\r\n        } catch (error) {\r\n            dispatch(setMessage(error))\r\n        } finally {\r\n            dispatch(setLoading(false))\r\n        }\r\n    }\r\n}","import { SET_SEARCH_HISTORY, MAX_ELEMENT_HISTORY } from './search-history.const'\r\n\r\nexport const setSearchHistory = (searchWorld: string) => {\r\n    const localStorageHistory = localStorage?.getItem('searchHistoryList');\r\n    const searchHistoryItem = localStorageHistory ? JSON.parse(localStorageHistory) : [];\r\n    const searchHistoryList = [...new Set(searchHistoryItem.concat(searchWorld))];\r\n\r\n    if (searchHistoryList.length > MAX_ELEMENT_HISTORY) {\r\n        const searchHistory = searchHistoryList.slice(1, searchHistoryList.length)\r\n\r\n        localStorage.setItem('searchHistoryList', JSON.stringify(searchHistory));\r\n    } else {\r\n        localStorage.setItem('searchHistoryList', JSON.stringify(searchHistoryList));\r\n    }\r\n\r\n    return ({\r\n        type: SET_SEARCH_HISTORY,\r\n        payload: searchHistoryList\r\n    })\r\n\r\n};","import React from 'react';\r\n\r\nimport './search.css';\r\n\r\ntype Props = {\r\n  description: string;\r\n  name: string;\r\n  id: string;\r\n  language: string;\r\n};\r\n\r\nconst SearchItem = (props: Props) => {\r\n  const { description, name, id, language } = props;\r\n\r\n  return (\r\n    <div className=\"search-item\" key={id}>\r\n      <b>{name}</b>\r\n      <div>\r\n        Language: <b>{language}</b>\r\n      </div>\r\n      <div>\r\n        Description: <b>{description}</b>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchItem;\r\n","import React from 'react';\r\nimport './loader.css';\r\n\r\nconst LoaderScreen = () => (\r\n  <div className=\"loader-wrapper\">\r\n    <div className=\"lds-dual-ring\"></div>;\r\n  </div>\r\n);\r\n\r\nexport default LoaderScreen;\r\n","import React from 'react';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\n// selectors\r\nimport { repositoriesSelector } from '../repositories/repositories.selectors';\r\nimport { isProgressSelectors, messageSelectors } from '../ui/ui.selectors';\r\n\r\n// components\r\nimport SearchHistory from './search-history';\r\nimport SearchInput from './search-input';\r\nimport SearchItem from './search-items';\r\nimport LoaderScreen from '../loader/loader-screen';\r\n\r\nimport './search.css';\r\n\r\nconst Search = () => {\r\n  const repositories = useSelector(repositoriesSelector);\r\n  const isProgress = useSelector(isProgressSelectors);\r\n  const message = useSelector(messageSelectors);\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div>\r\n        <SearchInput />\r\n        <SearchHistory />\r\n      </div>\r\n\r\n      {isProgress ? <LoaderScreen /> : null}\r\n\r\n      <div className=\"search-list\">\r\n        {message ? <div className=\"message-info\">{message}</div> : null}\r\n\r\n        {repositories.length\r\n          ? repositories.map(\r\n              (repositorie: {\r\n                description: string;\r\n                full_name: string;\r\n                id: string;\r\n                language: string;\r\n              }) => {\r\n                const { id, description, full_name, language } = repositorie;\r\n\r\n                return (\r\n                  <SearchItem\r\n                    id={id}\r\n                    key={id}\r\n                    name={full_name}\r\n                    language={language}\r\n                    description={description}\r\n                  />\r\n                );\r\n              },\r\n            )\r\n          : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n\r\nimport Navigation from '../navigation/navigation';\r\nimport SearchScreen from '../search/search-screen';\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"container\">\r\n      <BrowserRouter>\r\n        <Navigation />\r\n\r\n        <div className=\"container-content\">\r\n          <Switch>\r\n            <Route exact path=\"/\" isAc component={SearchScreen} />\r\n          </Switch>\r\n        </div>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { store } from './store/store';\r\nimport App from './app/App';\r\n\r\nimport './index.css';\r\n\r\nrender(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n    ,\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}